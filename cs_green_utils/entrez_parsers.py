# -*- coding: utf-8 -*-
"""Entrez Parsers"""


def genomic_info_from_es_result(single_esummary_result):
    """
    Extract genomic location info

    Input: esummary result generated by searching gene database
    Output: a dictionary that can be used as efetch params argument
    """
    genomic_info = single_esummary_result['genomicinfo']
    count = len(genomic_info)
    if count > 1:
        print('genomic_info contains {} items; expected: 1.'.format(count))

    genomic_info = genomic_info[0]
    # Note: genomic_info will only contain the first element of genomicinfo.
    #       This should work just fine, but look out for edge cases.

    seq_id = genomic_info['chraccver']
    seq_start = genomic_info['chrstart'] + 1
    seq_stop = genomic_info['chrstop'] + 1

    strand = 1
    if seq_start > seq_stop:
        strand = 2

    return_dict = dict()
    return_dict['id'] = seq_id
    return_dict['seq_start'] = seq_start
    return_dict['seq_stop'] = seq_stop
    return_dict['strand'] = strand

    return return_dict
